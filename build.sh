#!/bin/bash

SHADERS=(
    "2d_shape.vert"
    "2d_shape.frag"
    "3d_shape.vert"
    "3d_shape.frag"
)

SHADERCROSS=""
GLSLC=""
if [[ "$OSTYPE" == "msys" ]]; then
    SHADERCROSS="lib/SDL_shadercross/win64/shadercross.exe"
    if [ -z "$VULKAN_SDK" ]; then
        echo "Missing VulkanSDK"
        exit 1
    fi
    GLSLC="${VULKAN_SDK}/Bin/glslc"
else
    echo "Unsupported build environment"
    exit 1
fi

SDL_GPUD_BEGIN="src/SDL_gpud_begin.h"
SDL_GPUD_END="src/SDL_gpud_end.h"
SDL_GPUD_IMPL="src/SDL_gpud_impl.h"
SDL_GPUD_SHADERS="src/SDL_gpud_shaders.h"
SDL_GPUD="SDL_gpud.h"

mkdir -p "shaders/bin"
echo "" > $SDL_GPUD_SHADERS
for FILE in "${SHADERS[@]}"; do
    SRC="shaders/${FILE}"
    SPV="shaders/bin/${FILE}.spv"
    DXIL="shaders/bin/${FILE}.dxil"
    MSL="shaders/bin/${FILE}.msl"
    $GLSLC $SRC -o $SPV -I "shaders"
    if [[ $? -ne 0 ]]; then
        echo "Failed to compile shader to SPV: $FILE"
        exit 1
    fi
    $SHADERCROSS $SPV -o $DXIL
    if [[ $? -ne 0 ]]; then
        echo "Failed to convert shader to DXIL: $FILE"
        exit 1
    fi
    $SHADERCROSS $SPV -o $MSL
    if [[ $? -ne 0 ]]; then
        echo "Failed to convert shader to MSL: $FILE"
        exit 1
    fi
    xxd -i $SPV >> $SDL_GPUD_SHADERS
    xxd -i $DXIL >> $SDL_GPUD_SHADERS
    xxd -i $MSL >> $SDL_GPUD_SHADERS
done
sed -i "/unsigned int/d" "$SDL_GPUD_SHADERS" 
sed -i "s/unsigned/static unsigned/" "$SDL_GPUD_SHADERS"
sed -i "s/shaders_bin_/shader_/g" "$SDL_GPUD_SHADERS"
sed -i 's/^  /    /' "$SDL_GPUD_SHADERS"
sed -z -i 's/{\n/\n{\n/g' "$SDL_GPUD_SHADERS"

echo "/* Autogenerated on $(date) */" > $SDL_GPUD
echo "/* Public domain. See the full license at the end of the file */" >> $SDL_GPUD
echo "" >> $SDL_GPUD
cat $SDL_GPUD_BEGIN >> $SDL_GPUD
echo "" >> $SDL_GPUD
cat $SDL_GPUD_SHADERS >> $SDL_GPUD
echo "" >> $SDL_GPUD
cat $SDL_GPUD_IMPL >> $SDL_GPUD
echo "" >> $SDL_GPUD
echo "" >> $SDL_GPUD
cat $SDL_GPUD_END >> $SDL_GPUD
echo "" >> $SDL_GPUD
echo "" >> $SDL_GPUD
echo "/*" >> $SDL_GPUD
cat LICENSE.txt >> $SDL_GPUD
echo "" >> $SDL_GPUD
echo "*/" >> $SDL_GPUD